plugins {
	id "java"
	id "application"
	id "idea"
	id "org.springframework.boot" version "2.6.3"
	id "io.spring.dependency-management" version "1.0.11.RELEASE"
	id "com.google.cloud.tools.jib" version "3.2.0"
}

group = "by.vk.betting.api"
version = "1.0.0-rc.1"

application {
	mainClass = "by.vk.betting.api.ServiceApplication"
	applicationName = "api"
}

bootJar {
	enabled = true
	archiveFileName = "application.jar"
	manifest {
		attributes 'provider': 'gradle'
	}
}

springBoot {
	buildInfo()
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

test {
	useJUnitPlatform()
}

repositories {
	mavenCentral()
}

ext {
	set("logbackVersion", "0.1.5")
}

dependencies {
	//region spring
	implementation("org.springframework.boot:spring-boot-starter-web")
	//endregion

	//region logback
	implementation("ch.qos.logback.contrib:logback-json-classic:${logbackVersion}")
	implementation("ch.qos.logback.contrib:logback-jackson:${logbackVersion}")
	//endregion

	//region test
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	//endregion
}

jib {
	from {
		image = "gcr.io/distroless/java17-debian11"
	}
	to {
		image = "fragaly/analytic-service"
		tags = ["$version", "latest"]
	}
	container {
		jvmFlags = ["-Xss256k",
					"-Xmx512m",
					"-Xms256m",
					"-XX:MaxMetaspaceSize=128m",
					"-XX:+AlwaysActAsServerClassMachine",
					"-XX:+ExitOnOutOfMemoryError",
					"-XX:+UseContainerSupport",
					"-XX:+UseStringDeduplication",
					"-XX:+ExitOnOutOfMemoryError",
					"-XX:+OptimizeStringConcat",
					"-XX:MaxRAMPercentage=75",
					"-XX:InitialRAMPercentage=50",
					"-XX:HeapDumpPath=/opt/tmp/heapdump.bin"]
		mainClass = "by.vk.betting.api.ServiceApplication"
		ports = ['80']
		labels = ["app-name": "analytic-service", "service-version": "$version"]
		creationTime = "USE_CURRENT_TIMESTAMP"
	}
}
